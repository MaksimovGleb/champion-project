services:
    app:
        build:
            context: .
            dockerfile: docker/Dockerfile
        container_name: laravel_app
        restart: unless-stopped
        volumes:
            - .:/var/www/html
            - ./storage:/var/www/html/storage
            - ./bootstrap/cache:/var/www/html/bootstrap/cache
        depends_on:
            - mysql

    mysql:
        image: mysql:8.0
        container_name: laravel_mysql
        restart: unless-stopped
        environment:
            MYSQL_ROOT_PASSWORD: root
            MYSQL_DATABASE: champions
            MYSQL_USER: champion
            MYSQL_PASSWORD: password
        volumes:
            - db_data:/var/lib/mysql
        # Если нужен доступ из хоста:
        # ports:
        #   - "3306:3306"

    nginx:
        image: nginx:alpine
        container_name: laravel_nginx
        restart: unless-stopped
        ports:
            - "8080:80"
        volumes:
            - .:/var/www/html
            - ./docker/nginx/default.conf:/etc/nginx/conf.d/default.conf
        depends_on:
            - app

    artisan:
        build:
            context: .
            dockerfile: docker/Dockerfile
        container_name: laravel_artisan
        depends_on:
            - mysql
            - app
        working_dir: /var/www/html
        volumes:
            - .:/var/www/html
            - ./storage:/var/www/html/storage
            - ./bootstrap/cache:/var/www/html/bootstrap/cache
        entrypoint: ["sh", "-c", "/wait-for-it.sh mysql:3306 -- php artisan migrate --seed"]
        restart: "no"

    phpmyadmin:
        image: phpmyadmin/phpmyadmin:latest
        container_name: laravel_phpmyadmin
        restart: unless-stopped
        environment:
            PMA_HOST: mysql
            PMA_USER: root
            PMA_PASSWORD: root
        ports:
            - "8081:80"
        depends_on:
            - mysql

volumes:
    db_data:
